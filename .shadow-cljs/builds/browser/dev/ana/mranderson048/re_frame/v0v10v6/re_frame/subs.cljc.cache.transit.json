["^ ","~:output",["^ ","~:js","goog.provide('mranderson048.re_frame.v0v10v6.re_frame.subs');\ngoog.require('cljs.core');\ngoog.require('mranderson048.re_frame.v0v10v6.re_frame.db');\ngoog.require('mranderson048.re_frame.v0v10v6.re_frame.interop');\ngoog.require('mranderson048.re_frame.v0v10v6.re_frame.loggers');\ngoog.require('mranderson048.re_frame.v0v10v6.re_frame.utils');\ngoog.require('mranderson048.re_frame.v0v10v6.re_frame.registrar');\ngoog.require('mranderson048.re_frame.v0v10v6.re_frame.trace');\nmranderson048.re_frame.v0v10v6.re_frame.subs.kind = new cljs.core.Keyword(null,\"sub\",\"sub\",-2093760025);\nif(cljs.core.truth_((mranderson048.re_frame.v0v10v6.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? mranderson048.re_frame.v0v10v6.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.subs.kind) : mranderson048.re_frame.v0v10v6.re_frame.registrar.kinds.call(null,mranderson048.re_frame.v0v10v6.re_frame.subs.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (mranderson048.re-frame.v0v10v6.re-frame.registrar/kinds kind)\"));\n}\nmranderson048.re_frame.v0v10v6.re_frame.subs.query__GT_reaction = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n/**\n * Causes all subscriptions to be removed from the cache.\n *   Does this by:\n *   1. running on-dispose on all cached subscriptions\n *   2. These on-dispose will then do the removal of themselves.\n * \n *   This is a development time tool. Useful when reloading Figwheel code\n *   after a React exception, because React components won't have been\n *   cleaned up properly. And this, in turn, means the subscriptions within those\n *   components won't have been cleaned up correctly. So this forces the issue.\n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.clear_subscription_cache_BANG_ = (function mranderson048$re_frame$v0v10v6$re_frame$subs$clear_subscription_cache_BANG_(){\nvar seq__48122_48247 = cljs.core.seq(cljs.core.deref(mranderson048.re_frame.v0v10v6.re_frame.subs.query__GT_reaction));\nvar chunk__48123_48248 = null;\nvar count__48124_48249 = (0);\nvar i__48125_48250 = (0);\nwhile(true){\nif((i__48125_48250 < count__48124_48249)){\nvar vec__48148_48252 = chunk__48123_48248.cljs$core$IIndexed$_nth$arity$2(null,i__48125_48250);\nvar k_48253 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48148_48252,(0),null);\nvar rxn_48254 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48148_48252,(1),null);\nmranderson048.re_frame.v0v10v6.re_frame.interop.dispose_BANG_(rxn_48254);\n\n\nvar G__48257 = seq__48122_48247;\nvar G__48258 = chunk__48123_48248;\nvar G__48259 = count__48124_48249;\nvar G__48260 = (i__48125_48250 + (1));\nseq__48122_48247 = G__48257;\nchunk__48123_48248 = G__48258;\ncount__48124_48249 = G__48259;\ni__48125_48250 = G__48260;\ncontinue;\n} else {\nvar temp__5735__auto___48261 = cljs.core.seq(seq__48122_48247);\nif(temp__5735__auto___48261){\nvar seq__48122_48262__$1 = temp__5735__auto___48261;\nif(cljs.core.chunked_seq_QMARK_(seq__48122_48262__$1)){\nvar c__4609__auto___48263 = cljs.core.chunk_first(seq__48122_48262__$1);\nvar G__48264 = cljs.core.chunk_rest(seq__48122_48262__$1);\nvar G__48265 = c__4609__auto___48263;\nvar G__48266 = cljs.core.count(c__4609__auto___48263);\nvar G__48267 = (0);\nseq__48122_48247 = G__48264;\nchunk__48123_48248 = G__48265;\ncount__48124_48249 = G__48266;\ni__48125_48250 = G__48267;\ncontinue;\n} else {\nvar vec__48154_48268 = cljs.core.first(seq__48122_48262__$1);\nvar k_48269 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48154_48268,(0),null);\nvar rxn_48270 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48154_48268,(1),null);\nmranderson048.re_frame.v0v10v6.re_frame.interop.dispose_BANG_(rxn_48270);\n\n\nvar G__48271 = cljs.core.next(seq__48122_48262__$1);\nvar G__48272 = null;\nvar G__48273 = (0);\nvar G__48274 = (0);\nseq__48122_48247 = G__48271;\nchunk__48123_48248 = G__48272;\ncount__48124_48249 = G__48273;\ni__48125_48250 = G__48274;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(cljs.core.not_empty(cljs.core.deref(mranderson048.re_frame.v0v10v6.re_frame.subs.query__GT_reaction)))){\nreturn mranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Subscription cache should be empty after clearing it.\"], 0));\n} else {\nreturn null;\n}\n});\n/**\n * Unregisters all existing subscription handlers\n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.clear_all_handlers_BANG_ = (function mranderson048$re_frame$v0v10v6$re_frame$subs$clear_all_handlers_BANG_(){\nmranderson048.re_frame.v0v10v6.re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.subs.kind);\n\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.clear_subscription_cache_BANG_();\n});\n/**\n * cache the reaction r\n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.cache_and_return = (function mranderson048$re_frame$v0v10v6$re_frame$subs$cache_and_return(query_v,dynv,r){\nvar cache_key = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [query_v,dynv], null);\nmranderson048.re_frame.v0v10v6.re_frame.interop.add_on_dispose_BANG_(r,(function (){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__48159 = mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__48160 = mranderson048.re_frame.v0v10v6.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query_v),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"dispose\",\"sub/dispose\",365440536),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query_v,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(r)], null)], null));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__48160);\n\ntry{try{return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.query__GT_reaction,(function (query_cache){\nif(((cljs.core.contains_QMARK_(query_cache,cache_key)) && ((r === cljs.core.get.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key))))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key);\n} else {\nreturn query_cache;\n}\n}));\n}finally {if(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__48052__auto___48277 = mranderson048.re_frame.v0v10v6.re_frame.interop.now();\nvar duration__48053__auto___48278 = (end__48052__auto___48277 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v6.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__48053__auto___48278,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),mranderson048.re_frame.v0v10v6.re_frame.interop.now()], 0)));\n\nmranderson048.re_frame.v0v10v6.re_frame.trace.run_tracing_callbacks_BANG_(end__48052__auto___48277);\n} else {\n}\n}}finally {(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__48159);\n}} else {\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.query__GT_reaction,(function (query_cache){\nif(((cljs.core.contains_QMARK_(query_cache,cache_key)) && ((r === cljs.core.get.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key))))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key);\n} else {\nreturn query_cache;\n}\n}));\n}\n}));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.query__GT_reaction,(function (query_cache){\nif(mranderson048.re_frame.v0v10v6.re_frame.interop.debug_enabled_QMARK_){\nif(cljs.core.contains_QMARK_(query_cache,cache_key)){\nmranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: Adding a new subscription to the cache while there is an existing subscription in the cache\",cache_key], 0));\n} else {\n}\n} else {\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_cache,cache_key,r);\n}));\n\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48280 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(r)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(r)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48280);\n\n} else {\n}\n\nreturn r;\n});\nmranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup = (function mranderson048$re_frame$v0v10v6$re_frame$subs$cache_lookup(var_args){\nvar G__48168 = arguments.length;\nswitch (G__48168) {\ncase 1:\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1 = (function (query_v){\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query_v,cljs.core.PersistentVector.EMPTY);\n}));\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2 = (function (query_v,dyn_v){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(mranderson048.re_frame.v0v10v6.re_frame.subs.query__GT_reaction),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [query_v,dyn_v], null));\n}));\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$lang$maxFixedArity = 2);\n\n/**\n * Given a `query`, returns a Reagent `reaction` which, over\n *   time, reactively delivers a stream of values. So in FRP-ish terms,\n *   it returns a Signal.\n * \n *   To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n * \n *   `query` is a vector of at least one element. The first element is the\n *   `query-id`, typically a namespaced keyword. The rest of the vector's\n *   elements are optional, additional values which parameterise the query\n *   performed.\n * \n *   `dynv` is an optional 3rd argument, `which is a vector of further input\n *   signals (atoms, reactions, etc), NOT values. This argument exists for\n *   historical reasons and is borderline deprecated these days.\n * \n *   Example Usage:\n *   --------------\n * \n *  (subscribe [:items])\n *  (subscribe [:items \"blue\" :small])\n *  (subscribe [:items {:colour \"blue\"  :size :small}])\n * \n *   Note: for any given call to `subscribe` there must have been a previous call\n *   to `reg-sub`, registering the query handler (function) for the `query-id` given.\n * \n *   Hint\n *   ----\n * \n *   When used in a view function BE SURE to `deref` the returned value.\n *   In fact, to avoid any mistakes, some prefer to define:\n * \n *   (def <sub  (comp deref mranderson048.re-frame.v0v10v6.re-frame.core/subscribe))\n * \n *   And then, within their views, they call  `(<sub [:items :small])` rather\n *   than using `subscribe` directly.\n * \n *   De-duplication\n *   --------------\n * \n *   XXX\n *   \n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.subscribe = (function mranderson048$re_frame$v0v10v6$re_frame$subs$subscribe(var_args){\nvar G__48170 = arguments.length;\nswitch (G__48170) {\ncase 1:\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1 = (function (query){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__48171 = mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__48172 = mranderson048.re_frame.v0v10v6.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"create\",\"sub/create\",-1301317560),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query], null)], null));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__48172);\n\ntry{try{var temp__5733__auto__ = mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1(query);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar cached = temp__5733__auto__;\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48283 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48283);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query);\nvar handler_fn = mranderson048.re_frame.v0v10v6.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.kind,query_id);\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48284 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48284);\n\n} else {\n}\n\nif((handler_fn == null)){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48287 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48287);\n\n} else {\n}\n\nreturn mranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.cache_and_return(query,cljs.core.PersistentVector.EMPTY,(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.db.app_db,query) : handler_fn.call(null,mranderson048.re_frame.v0v10v6.re_frame.db.app_db,query)));\n}\n}\n}finally {if(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__48052__auto___48291 = mranderson048.re_frame.v0v10v6.re_frame.interop.now();\nvar duration__48053__auto___48292 = (end__48052__auto___48291 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v6.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__48053__auto___48292,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),mranderson048.re_frame.v0v10v6.re_frame.interop.now()], 0)));\n\nmranderson048.re_frame.v0v10v6.re_frame.trace.run_tracing_callbacks_BANG_(end__48052__auto___48291);\n} else {\n}\n}}finally {(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__48171);\n}} else {\nvar temp__5733__auto__ = mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1(query);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar cached = temp__5733__auto__;\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48293 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48293);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query);\nvar handler_fn = mranderson048.re_frame.v0v10v6.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.kind,query_id);\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48294 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48294);\n\n} else {\n}\n\nif((handler_fn == null)){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48297 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48297);\n\n} else {\n}\n\nreturn mranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.cache_and_return(query,cljs.core.PersistentVector.EMPTY,(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.db.app_db,query) : handler_fn.call(null,mranderson048.re_frame.v0v10v6.re_frame.db.app_db,query)));\n}\n}\n}\n}));\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$2 = (function (query,dynv){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__48175 = mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__48176 = mranderson048.re_frame.v0v10v6.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"create\",\"sub/create\",-1301317560),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query,new cljs.core.Keyword(null,\"dyn-v\",\"dyn-v\",949994592),dynv], null)], null));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__48176);\n\ntry{try{var temp__5733__auto__ = mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query,dynv);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar cached = temp__5733__auto__;\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48305 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48305);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query);\nvar handler_fn = mranderson048.re_frame.v0v10v6.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.kind,query_id);\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48310 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48310);\n\n} else {\n}\n\nif(mranderson048.re_frame.v0v10v6.re_frame.interop.debug_enabled_QMARK_){\nvar temp__5735__auto___48314 = cljs.core.not_empty(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.interop.ratom_QMARK_,dynv));\nif(cljs.core.truth_(temp__5735__auto___48314)){\nvar not_reactive_48315 = temp__5735__auto___48314;\nmranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: your subscription's dynamic parameters that don't implement IReactiveAtom:\",not_reactive_48315], 0));\n} else {\n}\n} else {\n}\n\nif((handler_fn == null)){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48316 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48316);\n\n} else {\n}\n\nreturn mranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nvar dyn_vals = mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,dynv);\n}));\nvar sub = mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nvar G__48182 = mranderson048.re_frame.v0v10v6.re_frame.db.app_db;\nvar G__48183 = query;\nvar G__48184 = cljs.core.deref(dyn_vals);\nreturn (handler_fn.cljs$core$IFn$_invoke$arity$3 ? handler_fn.cljs$core$IFn$_invoke$arity$3(G__48182,G__48183,G__48184) : handler_fn.call(null,G__48182,G__48183,G__48184));\n}));\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.cache_and_return(query,dynv,mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nreturn cljs.core.deref(cljs.core.deref(sub));\n})));\n}\n}\n}finally {if(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__48052__auto___48323 = mranderson048.re_frame.v0v10v6.re_frame.interop.now();\nvar duration__48053__auto___48324 = (end__48052__auto___48323 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v6.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__48053__auto___48324,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),mranderson048.re_frame.v0v10v6.re_frame.interop.now()], 0)));\n\nmranderson048.re_frame.v0v10v6.re_frame.trace.run_tracing_callbacks_BANG_(end__48052__auto___48323);\n} else {\n}\n}}finally {(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__48175);\n}} else {\nvar temp__5733__auto__ = mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query,dynv);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar cached = temp__5733__auto__;\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48326 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),true,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48326);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id = mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query);\nvar handler_fn = mranderson048.re_frame.v0v10v6.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.kind,query_id);\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48329 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"cached?\",\"cached?\",86081880),false], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48329);\n\n} else {\n}\n\nif(mranderson048.re_frame.v0v10v6.re_frame.interop.debug_enabled_QMARK_){\nvar temp__5735__auto___48331 = cljs.core.not_empty(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.interop.ratom_QMARK_,dynv));\nif(cljs.core.truth_(temp__5735__auto___48331)){\nvar not_reactive_48332 = temp__5735__auto___48331;\nmranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: your subscription's dynamic parameters that don't implement IReactiveAtom:\",not_reactive_48332], 0));\n} else {\n}\n} else {\n}\n\nif((handler_fn == null)){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48334 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),true], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48334);\n\n} else {\n}\n\nreturn mranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"re-frame: no subscription handler registered for: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\". Returning a nil subscription.\"].join('')], 0));\n} else {\nvar dyn_vals = mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,dynv);\n}));\nvar sub = mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nvar G__48188 = mranderson048.re_frame.v0v10v6.re_frame.db.app_db;\nvar G__48189 = query;\nvar G__48190 = cljs.core.deref(dyn_vals);\nreturn (handler_fn.cljs$core$IFn$_invoke$arity$3 ? handler_fn.cljs$core$IFn$_invoke$arity$3(G__48188,G__48189,G__48190) : handler_fn.call(null,G__48188,G__48189,G__48190));\n}));\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.cache_and_return(query,dynv,mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nreturn cljs.core.deref(cljs.core.deref(sub));\n})));\n}\n}\n}\n}));\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$lang$maxFixedArity = 2);\n\n/**\n * Returns a new version of 'm' in which 'f' has been applied to each value.\n *   (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}\n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.map_vals = (function mranderson048$re_frame$v0v10v6$re_frame$subs$map_vals(f,m){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(m),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__48194){\nvar vec__48195 = p__48194;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48195,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48195,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(v) : f.call(null,v))], null);\n})),m);\n});\n/**\n * Runs f over signals. Signals may take several\n *   forms, this function handles all of them.\n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.map_signals = (function mranderson048$re_frame$v0v10v6$re_frame$subs$map_signals(f,signals){\nif(cljs.core.sequential_QMARK_(signals)){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,signals);\n} else {\nif(cljs.core.map_QMARK_(signals)){\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.map_vals(f,signals);\n} else {\nif(mranderson048.re_frame.v0v10v6.re_frame.interop.deref_QMARK_(signals)){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(signals) : f.call(null,signals));\n} else {\nreturn cljs.core.List.EMPTY;\n\n}\n}\n}\n});\n/**\n * Coerces x to a seq if it isn't one already\n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.to_seq = (function mranderson048$re_frame$v0v10v6$re_frame$subs$to_seq(x){\nif(cljs.core.sequential_QMARK_(x)){\nreturn x;\n} else {\nreturn (new cljs.core.List(null,x,null,(1),null));\n}\n});\nmranderson048.re_frame.v0v10v6.re_frame.subs.deref_input_signals = (function mranderson048$re_frame$v0v10v6$re_frame$subs$deref_input_signals(signals,query_id){\nvar dereffed_signals = mranderson048.re_frame.v0v10v6.re_frame.subs.map_signals(cljs.core.deref,signals);\nif(cljs.core.sequential_QMARK_(signals)){\ncljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,signals);\n} else {\nif(cljs.core.map_QMARK_(signals)){\nmranderson048.re_frame.v0v10v6.re_frame.subs.map_vals(cljs.core.deref,signals);\n} else {\nif(mranderson048.re_frame.v0v10v6.re_frame.interop.deref_QMARK_(signals)){\ncljs.core.deref(signals);\n} else {\nmranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in the reg-sub for\",query_id,\", the input-signals function returns:\",signals], 0));\n\n}\n}\n}\n\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48344 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.subs.to_seq(mranderson048.re_frame.v0v10v6.re_frame.subs.map_signals(mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id,signals)))], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"input-signals\",\"input-signals\",563633497),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.subs.to_seq(mranderson048.re_frame.v0v10v6.re_frame.subs.map_signals(mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id,signals)))], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48344);\n\n} else {\n}\n\nreturn dereffed_signals;\n});\n/**\n * For a given `query-id`, register a `computation` function and input `signals`.\n * \n *   At an abstract level, a call to this function allows you to register 'the mechanism'\n *   to later fulfil a call to `(subscribe [query-id ...])`.\n * \n *   To say that another way, reg-sub allows you to create a template for a node\n *   in the signal graph. But note: reg-sub does not cause a node to be created.\n *   It simply allows you to register the template from which such a\n *   node could be created, if it were needed, sometime later, when the call\n *   to `subscribe` is made.\n * \n *   reg-sub needs three things:\n *  - a `query-id`\n *  - the required inputs for this node\n *  - a computation function for this node\n * \n *   The `query-id` is always the 1st argument to reg-sub and it is typically\n *   a namespaced keyword.\n * \n *   A computation function is always the last argument and it has this general form:\n *  `(input-signals, query-vector) -> a-value`\n * \n *   What goes in between the 1st and last args can vary, but whatever is there will\n *   define the input signals part of the template, and, as a result, it will control\n *   what values the computation functions gets as a first argument.\n * \n *   There's 3 ways this function can be called - 3 ways to supply input signals:\n * \n *   1. No input signals given:\n * \n *   (reg-sub\n *     :query-id\n *     a-computation-fn)   ;; (fn [db v]  ... a-value)\n * \n *   The node's input signal defaults to `app-db`, and the value within `app-db` is\n *   is given as the 1st argument to the computation function.\n * \n *   2. A signal function is supplied:\n * \n *   (reg-sub\n *     :query-id\n *     signal-fn     ;; <-- here\n *     computation-fn)\n * \n *   When a node is created from the template, the `signal-fn` will be called and it\n *   is expected to return the input signal(s) as either a singleton, if there is only\n *   one, or a sequence if there are many, or a map with the signals as the values.\n * \n *   The values from the nominated signals will be supplied as the 1st argument to the\n *   computation function - either a singleton, sequence or map of them, paralleling\n *   the structure returned by the signal function.\n * \n *   Here, is an example signal-fn, which returns a vector of input signals.\n * \n *     (fn [query-vec dynamic-vec]\n *       [(subscribe [:a-sub])\n *        (subscribe [:b-sub])])\n * \n *   For that signal function, the computation function must be written\n *   to expect a vector of values for its first argument.\n *     (fn [[a b] _] ....)\n * \n *   If the signal function was simpler and returned a singleton, like this:\n *      (fn [query-vec dynamic-vec]\n *        (subscribe [:a-sub]))\n * \n *   then the computation function must be written to expect a single value\n *   as the 1st argument:\n * \n *      (fn [a _] ...)\n * \n *   3. Syntax Sugar\n * \n *   (reg-sub\n *     :a-b-sub\n *     :<- [:a-sub]\n *     :<- [:b-sub]\n *     (fn [[a b] [_]] {:a a :b b}))\n * \n *   This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n *   of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n *   vector follows.\n * \n *   For further understanding, read `/docs`, and look at the detailed comments in\n *   /examples/todomvc/src/subs.cljs\n *   \n */\nmranderson048.re_frame.v0v10v6.re_frame.subs.reg_sub = (function mranderson048$re_frame$v0v10v6$re_frame$subs$reg_sub(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___48350 = arguments.length;\nvar i__4790__auto___48351 = (0);\nwhile(true){\nif((i__4790__auto___48351 < len__4789__auto___48350)){\nargs__4795__auto__.push((arguments[i__4790__auto___48351]));\n\nvar G__48352 = (i__4790__auto___48351 + (1));\ni__4790__auto___48351 = G__48352;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.reg_sub.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.reg_sub.cljs$core$IFn$_invoke$arity$variadic = (function (query_id,args){\nvar computation_fn = cljs.core.last(args);\nvar input_args = cljs.core.butlast(args);\nvar err_header = [\"re-frame: reg-sub for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\", \"].join('');\nvar inputs_fn = (function (){var G__48212 = cljs.core.count(input_args);\nswitch (G__48212) {\ncase (0):\nreturn (function() {\nvar G__48354 = null;\nvar G__48354__1 = (function (_){\nreturn mranderson048.re_frame.v0v10v6.re_frame.db.app_db;\n});\nvar G__48354__2 = (function (_,___$1){\nreturn mranderson048.re_frame.v0v10v6.re_frame.db.app_db;\n});\nG__48354 = function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn G__48354__1.call(this,_);\ncase 2:\nreturn G__48354__2.call(this,_,___$1);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__48354.cljs$core$IFn$_invoke$arity$1 = G__48354__1;\nG__48354.cljs$core$IFn$_invoke$arity$2 = G__48354__2;\nreturn G__48354;\n})()\n\nbreak;\ncase (1):\nvar f = cljs.core.first(input_args);\nif(cljs.core.fn_QMARK_(f)){\n} else {\nmranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\"2nd argument expected to be an inputs function, got:\",f], 0));\n}\n\nreturn f;\n\nbreak;\ncase (2):\nvar vec__48213 = input_args;\nvar marker = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48213,(0),null);\nvar vec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48213,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<-\",\"<-\",760412998),marker)){\n} else {\nmranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\"expected :<-, got:\",marker], 0));\n}\n\nreturn (function() {\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn = null;\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__1 = (function (_){\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1(vec);\n});\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__2 = (function (_,___$1){\nreturn mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1(vec);\n});\nmranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn = function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__1.call(this,_);\ncase 2:\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__2.call(this,_,___$1);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nmranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$1 = mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__1;\nmranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$2 = mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__2;\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn;\n})()\n\nbreak;\ndefault:\nvar pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),input_args);\nvar markers = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs);\nvar vecs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.last,pairs);\nif(((cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"<-\",\"<-\",760412998),null], null), null),markers)) && (cljs.core.every_QMARK_(cljs.core.vector_QMARK_,vecs)))){\n} else {\nmranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\"expected pairs of :<- and vectors, got:\",pairs], 0));\n}\n\nreturn (function() {\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn = null;\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__1 = (function (_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe,vecs);\n});\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__2 = (function (_,___$1){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe,vecs);\n});\nmranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn = function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__1.call(this,_);\ncase 2:\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__2.call(this,_,___$1);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nmranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$1 = mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__1;\nmranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$2 = mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn__2;\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$inp_fn;\n})()\n\n}\n})();\nreturn mranderson048.re_frame.v0v10v6.re_frame.registrar.register_handler(mranderson048.re_frame.v0v10v6.re_frame.subs.kind,query_id,(function() {\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn = null;\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn__2 = (function (db,query_vec){\nvar subscriptions = (inputs_fn.cljs$core$IFn$_invoke$arity$1 ? inputs_fn.cljs$core$IFn$_invoke$arity$1(query_vec) : inputs_fn.call(null,query_vec));\nvar reaction_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar reaction = mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__48220 = mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__48221 = mranderson048.re_frame.v0v10v6.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query_vec),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"run\",\"sub/run\",-1821315581),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query_vec,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),cljs.core.deref(reaction_id)], null)], null));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__48221);\n\ntry{try{var subscription = (function (){var G__48225 = mranderson048.re_frame.v0v10v6.re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__48226 = query_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$2 ? computation_fn.cljs$core$IFn$_invoke$arity$2(G__48225,G__48226) : computation_fn.call(null,G__48225,G__48226));\n})();\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48369 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48369);\n\n} else {\n}\n\nreturn subscription;\n}finally {if(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__48052__auto___48374 = mranderson048.re_frame.v0v10v6.re_frame.interop.now();\nvar duration__48053__auto___48375 = (end__48052__auto___48374 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v6.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__48053__auto___48375,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),mranderson048.re_frame.v0v10v6.re_frame.interop.now()], 0)));\n\nmranderson048.re_frame.v0v10v6.re_frame.trace.run_tracing_callbacks_BANG_(end__48052__auto___48374);\n} else {\n}\n}}finally {(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__48220);\n}} else {\nvar subscription = (function (){var G__48227 = mranderson048.re_frame.v0v10v6.re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__48228 = query_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$2 ? computation_fn.cljs$core$IFn$_invoke$arity$2(G__48227,G__48228) : computation_fn.call(null,G__48227,G__48228));\n})();\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48392 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48392);\n\n} else {\n}\n\nreturn subscription;\n}\n}));\ncljs.core.reset_BANG_(reaction_id,mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(reaction));\n\nreturn reaction;\n});\nvar mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn__3 = (function (db,query_vec,dyn_vec){\nvar subscriptions = (inputs_fn.cljs$core$IFn$_invoke$arity$2 ? inputs_fn.cljs$core$IFn$_invoke$arity$2(query_vec,dyn_vec) : inputs_fn.call(null,query_vec,dyn_vec));\nvar reaction_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar reaction = mranderson048.re_frame.v0v10v6.re_frame.interop.make_reaction((function (){\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__48232 = mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__48233 = mranderson048.re_frame.v0v10v6.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),mranderson048.re_frame.v0v10v6.re_frame.utils.first_in_vector(query_vec),new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"sub\",\"run\",\"sub/run\",-1821315581),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"query-v\",\"query-v\",-1514170131),query_vec,new cljs.core.Keyword(null,\"dyn-v\",\"dyn-v\",949994592),dyn_vec,new cljs.core.Keyword(null,\"reaction\",\"reaction\",490869788),cljs.core.deref(reaction_id)], null)], null));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__48233);\n\ntry{try{var subscription = (function (){var G__48234 = mranderson048.re_frame.v0v10v6.re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__48235 = query_vec;\nvar G__48236 = dyn_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$3 ? computation_fn.cljs$core$IFn$_invoke$arity$3(G__48234,G__48235,G__48236) : computation_fn.call(null,G__48234,G__48235,G__48236));\n})();\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48400 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48400);\n\n} else {\n}\n\nreturn subscription;\n}finally {if(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__48052__auto___48405 = mranderson048.re_frame.v0v10v6.re_frame.interop.now();\nvar duration__48053__auto___48406 = (end__48052__auto___48405 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v6.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__48053__auto___48406,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),mranderson048.re_frame.v0v10v6.re_frame.interop.now()], 0)));\n\nmranderson048.re_frame.v0v10v6.re_frame.trace.run_tracing_callbacks_BANG_(end__48052__auto___48405);\n} else {\n}\n}}finally {(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__48232);\n}} else {\nvar subscription = (function (){var G__48237 = mranderson048.re_frame.v0v10v6.re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__48238 = query_vec;\nvar G__48239 = dyn_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$3 ? computation_fn.cljs$core$IFn$_invoke$arity$3(G__48237,G__48238,G__48239) : computation_fn.call(null,G__48237,G__48238,G__48239));\n})();\nif(mranderson048.re_frame.v0v10v6.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__48054__auto___48407 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"value\",\"value\",305978217),subscription], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(mranderson048.re_frame.v0v10v6.re_frame.trace._STAR_current_trace_STAR_ = new_trace__48054__auto___48407);\n\n} else {\n}\n\nreturn subscription;\n}\n}));\ncljs.core.reset_BANG_(reaction_id,mranderson048.re_frame.v0v10v6.re_frame.interop.reagent_id(reaction));\n\nreturn reaction;\n});\nmranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn = function(db,query_vec,dyn_vec){\nswitch(arguments.length){\ncase 2:\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn__2.call(this,db,query_vec);\ncase 3:\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn__3.call(this,db,query_vec,dyn_vec);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nmranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn.cljs$core$IFn$_invoke$arity$2 = mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn__2;\nmranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn.cljs$core$IFn$_invoke$arity$3 = mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn__3;\nreturn mranderson048$re_frame$v0v10v6$re_frame$subs$subs_handler_fn;\n})()\n);\n}));\n\n(mranderson048.re_frame.v0v10v6.re_frame.subs.reg_sub.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(mranderson048.re_frame.v0v10v6.re_frame.subs.reg_sub.cljs$lang$applyTo = (function (seq48206){\nvar G__48207 = cljs.core.first(seq48206);\nvar seq48206__$1 = cljs.core.next(seq48206);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__48207,seq48206__$1);\n}));\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",49],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson048.re-frame.v0v10v6.re-frame.subs","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$mranderson048.re-frame.v0v10v6.re-frame.utils","^M","~$mranderson048.re-frame.v0v10v6.re-frame.interop","^N","~$cljs.core","^O","~$goog","^P","~$trace","~$mranderson048.re-frame.v0v10v6.re-frame.trace","^R","^R","~$mranderson048.re-frame.v0v10v6.re-frame.db","^S","~$mranderson048.re-frame.v0v10v6.re-frame.registrar","^T","~$mranderson048.re-frame.v0v10v6.re-frame.loggers","^U"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$reagent-id","^N","~$console","^U","~$app-db","^S","~$dispose!","^N","~$add-on-dispose!","^N","~$make-reaction","^N","~$get-handler","^T","~$first-in-vector","^M","~$deref?","^N","~$ratom?","^N","~$debug-enabled?","^N","~$clear-handlers","^T","~$register-handler","^T"],"~:require-macros",["^ ","^R","^R","^Q","^R","^O","^O"],"~:form",["~#list",["~$ns","^H",["^1<",["^W",["^S","~:refer",["^["]],["^N","^1>",["^11","^17","^12","^16","^15","^10","^Y"]],["^U","^1>",["^Z"]],["^M","^1>",["^14"]],["^T","^1>",["^13","^18","^19"]],["^R","~:as","^Q","~:include-macros",true]]]]],"~:flags",["^ ","^W",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^S","^N","^U","^M","^T","^R"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc"],"~:compiled-at",1581954189680,"~:resource-name","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","~:warnings",[],"~:source","(ns mranderson048.re-frame.v0v10v6.re-frame.subs\n (:require\n   [mranderson048.re-frame.v0v10v6.re-frame.db        :refer [app-db]]\n   [mranderson048.re-frame.v0v10v6.re-frame.interop   :refer [add-on-dispose! debug-enabled? make-reaction ratom? deref? dispose! reagent-id]]\n   [mranderson048.re-frame.v0v10v6.re-frame.loggers   :refer [console]]\n   [mranderson048.re-frame.v0v10v6.re-frame.utils     :refer [first-in-vector]]\n   [mranderson048.re-frame.v0v10v6.re-frame.registrar :refer [get-handler clear-handlers register-handler]]\n   [mranderson048.re-frame.v0v10v6.re-frame.trace     :as trace :include-macros true]))\n\n(def kind :sub)\n(assert (mranderson048.re-frame.v0v10v6.re-frame.registrar/kinds kind))\n\n;; -- cache -------------------------------------------------------------------\n;;\n;; De-duplicate subscriptions. If two or more equal subscriptions\n;; are concurrently active, we want only one handler running.\n;; Two subscriptions are \"equal\" if their query vectors test \"=\".\n(def query->reaction (atom {}))\n\n(defn clear-subscription-cache!\n  \"Causes all subscriptions to be removed from the cache.\n  Does this by:\n     1. running on-dispose on all cached subscriptions\n     2. These on-dispose will then do the removal of themselves.\n\n  This is a development time tool. Useful when reloading Figwheel code\n  after a React exception, because React components won't have been\n  cleaned up properly. And this, in turn, means the subscriptions within those\n  components won't have been cleaned up correctly. So this forces the issue.\"\n  []\n  (doseq [[k rxn] @query->reaction]\n    (dispose! rxn))\n  (if (not-empty @query->reaction)\n    (console :warn \"Subscription cache should be empty after clearing it.\")))\n\n(defn clear-all-handlers!\n  \"Unregisters all existing subscription handlers\"\n  []\n  (clear-handlers kind)\n  (clear-subscription-cache!))\n\n(defn cache-and-return\n  \"cache the reaction r\"\n  [query-v dynv r]\n  (let [cache-key [query-v dynv]]\n    ;; when this reaction is no longer being used, remove it from the cache\n    (add-on-dispose! r #(trace/with-trace {:operation (first-in-vector query-v)\n                                           :op-type   :sub/dispose\n                                           :tags      {:query-v  query-v\n                                                       :reaction (reagent-id r)}}\n                                          (swap! query->reaction\n                                                 (fn [query-cache]\n                                                   (if (and (contains? query-cache cache-key) (identical? r (get query-cache cache-key)))\n                                                     (dissoc query-cache cache-key)\n                                                     query-cache)))))\n    ;; cache this reaction, so it can be used to deduplicate other, later \"=\" subscriptions\n    (swap! query->reaction (fn [query-cache]\n                             (when debug-enabled?\n                               (when (contains? query-cache cache-key)\n                                 (console :warn \"re-frame: Adding a new subscription to the cache while there is an existing subscription in the cache\" cache-key)))\n                             (assoc query-cache cache-key r)))\n    (trace/merge-trace! {:tags {:reaction (reagent-id r)}})\n    r)) ;; return the actual reaction\n\n(defn cache-lookup\n  ([query-v]\n   (cache-lookup query-v []))\n  ([query-v dyn-v]\n   (get @query->reaction [query-v dyn-v])))\n\n\n;; -- subscribe ---------------------------------------------------------------\n\n(defn subscribe\n  \"Given a `query`, returns a Reagent `reaction` which, over\n  time, reactively delivers a stream of values. So in FRP-ish terms,\n  it returns a Signal.\n\n  To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n\n  `query` is a vector of at least one element. The first element is the\n  `query-id`, typically a namespaced keyword. The rest of the vector's\n  elements are optional, additional values which parameterise the query\n  performed.\n\n  `dynv` is an optional 3rd argument, `which is a vector of further input\n  signals (atoms, reactions, etc), NOT values. This argument exists for\n  historical reasons and is borderline deprecated these days.\n\n  Example Usage:\n  --------------\n\n    (subscribe [:items])\n    (subscribe [:items \\\"blue\\\" :small])\n    (subscribe [:items {:colour \\\"blue\\\"  :size :small}])\n\n  Note: for any given call to `subscribe` there must have been a previous call\n  to `reg-sub`, registering the query handler (function) for the `query-id` given.\n\n  Hint\n  ----\n\n  When used in a view function BE SURE to `deref` the returned value.\n  In fact, to avoid any mistakes, some prefer to define:\n\n     (def <sub  (comp deref mranderson048.re-frame.v0v10v6.re-frame.core/subscribe))\n\n  And then, within their views, they call  `(<sub [:items :small])` rather\n  than using `subscribe` directly.\n\n  De-duplication\n  --------------\n\n  XXX\n  \"\n\n  ([query]\n   (trace/with-trace {:operation (first-in-vector query)\n                      :op-type   :sub/create\n                      :tags      {:query-v query}}\n     (if-let [cached (cache-lookup query)]\n       (do\n         (trace/merge-trace! {:tags {:cached?  true\n                                     :reaction (reagent-id cached)}})\n         cached)\n\n       (let [query-id   (first-in-vector query)\n             handler-fn (get-handler kind query-id)]\n         (trace/merge-trace! {:tags {:cached? false}})\n         (if (nil? handler-fn)\n           (do (trace/merge-trace! {:error true})\n               (console :error (str \"re-frame: no subscription handler registered for: \" query-id \". Returning a nil subscription.\")))\n           (cache-and-return query [] (handler-fn app-db query)))))))\n\n  ([query dynv]\n   (trace/with-trace {:operation (first-in-vector query)\n                      :op-type   :sub/create\n                      :tags      {:query-v query\n                                  :dyn-v   dynv}}\n     (if-let [cached (cache-lookup query dynv)]\n       (do\n         (trace/merge-trace! {:tags {:cached?  true\n                                     :reaction (reagent-id cached)}})\n         cached)\n       (let [query-id   (first-in-vector query)\n             handler-fn (get-handler kind query-id)]\n         (trace/merge-trace! {:tags {:cached? false}})\n         (when debug-enabled?\n           (when-let [not-reactive (not-empty (remove ratom? dynv))]\n             (console :warn \"re-frame: your subscription's dynamic parameters that don't implement IReactiveAtom:\" not-reactive)))\n         (if (nil? handler-fn)\n           (do (trace/merge-trace! {:error true})\n               (console :error (str \"re-frame: no subscription handler registered for: \" query-id \". Returning a nil subscription.\")))\n           (let [dyn-vals (make-reaction (fn [] (mapv deref dynv)))\n                 sub      (make-reaction (fn [] (handler-fn app-db query @dyn-vals)))]\n             ;; handler-fn returns a reaction which is then wrapped in the sub reaction\n             ;; need to double deref it to get to the actual value.\n             ;(console :log \"Subscription created: \" v dynv)\n             (cache-and-return query dynv (make-reaction (fn [] @@sub))))))))))\n\n;; -- reg-sub -----------------------------------------------------------------\n\n(defn- map-vals\n  \"Returns a new version of 'm' in which 'f' has been applied to each value.\n  (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}\"\n  [f m]\n  (into (empty m)\n        (map (fn [[k v]] [k (f v)]))\n        m))\n\n(defn map-signals\n  \"Runs f over signals. Signals may take several\n  forms, this function handles all of them.\"\n  [f signals]\n  (cond\n    (sequential? signals) (map f signals)\n    (map? signals) (map-vals f signals)\n    (deref? signals) (f signals)\n    :else '()))\n\n(defn to-seq\n  \"Coerces x to a seq if it isn't one already\"\n  [x]\n  (if (sequential? x)\n    x\n    (list x)))\n\n(defn- deref-input-signals\n  [signals query-id]\n  (let [dereffed-signals (map-signals deref signals)]\n    (cond\n      (sequential? signals) (map deref signals)\n      (map? signals) (map-vals deref signals)\n      (deref? signals) (deref signals)\n      :else (console :error \"re-frame: in the reg-sub for\" query-id \", the input-signals function returns:\" signals))\n    (trace/merge-trace! {:tags {:input-signals (doall (to-seq (map-signals reagent-id signals)))}})\n    dereffed-signals))\n\n\n(defn reg-sub\n  \"For a given `query-id`, register a `computation` function and input `signals`.\n\n  At an abstract level, a call to this function allows you to register 'the mechanism'\n  to later fulfil a call to `(subscribe [query-id ...])`.\n\n  To say that another way, reg-sub allows you to create a template for a node\n  in the signal graph. But note: reg-sub does not cause a node to be created.\n  It simply allows you to register the template from which such a\n  node could be created, if it were needed, sometime later, when the call\n  to `subscribe` is made.\n\n  reg-sub needs three things:\n    - a `query-id`\n    - the required inputs for this node\n    - a computation function for this node\n\n  The `query-id` is always the 1st argument to reg-sub and it is typically\n  a namespaced keyword.\n\n  A computation function is always the last argument and it has this general form:\n    `(input-signals, query-vector) -> a-value`\n\n  What goes in between the 1st and last args can vary, but whatever is there will\n  define the input signals part of the template, and, as a result, it will control\n  what values the computation functions gets as a first argument.\n\n  There's 3 ways this function can be called - 3 ways to supply input signals:\n\n  1. No input signals given:\n\n     (reg-sub\n       :query-id\n       a-computation-fn)   ;; (fn [db v]  ... a-value)\n\n     The node's input signal defaults to `app-db`, and the value within `app-db` is\n     is given as the 1st argument to the computation function.\n\n  2. A signal function is supplied:\n\n     (reg-sub\n       :query-id\n       signal-fn     ;; <-- here\n       computation-fn)\n\n     When a node is created from the template, the `signal-fn` will be called and it\n     is expected to return the input signal(s) as either a singleton, if there is only\n     one, or a sequence if there are many, or a map with the signals as the values.\n\n     The values from the nominated signals will be supplied as the 1st argument to the\n     computation function - either a singleton, sequence or map of them, paralleling\n     the structure returned by the signal function.\n\n     Here, is an example signal-fn, which returns a vector of input signals.\n\n       (fn [query-vec dynamic-vec]\n         [(subscribe [:a-sub])\n          (subscribe [:b-sub])])\n\n     For that signal function, the computation function must be written\n     to expect a vector of values for its first argument.\n       (fn [[a b] _] ....)\n\n     If the signal function was simpler and returned a singleton, like this:\n        (fn [query-vec dynamic-vec]\n          (subscribe [:a-sub]))\n\n     then the computation function must be written to expect a single value\n     as the 1st argument:\n\n        (fn [a _] ...)\n\n  3. Syntax Sugar\n\n     (reg-sub\n       :a-b-sub\n       :<- [:a-sub]\n       :<- [:b-sub]\n       (fn [[a b] [_]] {:a a :b b}))\n\n  This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n  of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n  vector follows.\n\n  For further understanding, read `/docs`, and look at the detailed comments in\n  /examples/todomvc/src/subs.cljs\n  \"\n  [query-id & args]\n  (let [computation-fn (last args)\n        input-args     (butlast args) ;; may be empty, or one signal fn, or pairs of  :<- / vector\n        err-header     (str \"re-frame: reg-sub for \" query-id \", \")\n        inputs-fn      (case (count input-args)\n                         ;; no `inputs` function provided - give the default\n                         0 (fn\n                             ([_] app-db)\n                             ([_ _] app-db))\n\n                         ;; a single `inputs` fn\n                         1 (let [f (first input-args)]\n                             (when-not (fn? f)\n                               (console :error err-header \"2nd argument expected to be an inputs function, got:\" f))\n                             f)\n\n                         ;; one sugar pair\n                         2 (let [[marker vec] input-args]\n                             (when-not (= :<- marker)\n                               (console :error err-header \"expected :<-, got:\" marker))\n                             (fn inp-fn\n                               ([_] (subscribe vec))\n                               ([_ _] (subscribe vec))))\n\n                         ;; multiple sugar pairs\n                         (let [pairs   (partition 2 input-args)\n                               markers (map first pairs)\n                               vecs    (map last pairs)]\n                           (when-not (and (every? #{:<-} markers) (every? vector? vecs))\n                             (console :error err-header \"expected pairs of :<- and vectors, got:\" pairs))\n                           (fn inp-fn\n                             ([_] (map subscribe vecs))\n                             ([_ _] (map subscribe vecs)))))]\n    (register-handler\n      kind\n      query-id\n      (fn subs-handler-fn\n        ([db query-vec]\n         (let [subscriptions (inputs-fn query-vec)\n               reaction-id   (atom nil)\n               reaction      (make-reaction\n                               (fn []\n                                 (trace/with-trace {:operation (first-in-vector query-vec)\n                                                    :op-type   :sub/run\n                                                    :tags      {:query-v    query-vec\n                                                                :reaction   @reaction-id}}\n                                                   (let [subscription (computation-fn (deref-input-signals subscriptions query-id) query-vec)]\n                                                     (trace/merge-trace! {:tags {:value subscription}})\n                                                     subscription))))]\n\n           (reset! reaction-id (reagent-id reaction))\n           reaction))\n        ([db query-vec dyn-vec]\n         (let [subscriptions (inputs-fn query-vec dyn-vec)\n               reaction-id   (atom nil)\n               reaction      (make-reaction\n                               (fn []\n                                 (trace/with-trace {:operation (first-in-vector query-vec)\n                                                    :op-type   :sub/run\n                                                    :tags      {:query-v   query-vec\n                                                                :dyn-v     dyn-vec\n                                                                :reaction  @reaction-id}}\n                                                   (let [subscription (computation-fn (deref-input-signals subscriptions query-id) query-vec dyn-vec)]\n                                                     (trace/merge-trace! {:tags {:value subscription}})\n                                                     subscription))))]\n\n           (reset! reaction-id (reagent-id reaction))\n           reaction))))))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["mranderson048.re-frame.v0v10v6.re-frame.subs/kind","js/Error","mranderson048.re-frame.v0v10v6.re-frame.registrar/kinds","mranderson048.re-frame.v0v10v6.re-frame.subs/query->reaction","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","mranderson048.re-frame.v0v10v6.re-frame.subs/clear-subscription-cache!","seq__48122","cljs.core/seq","cljs.core/deref","chunk__48123","count__48124","i__48125","vec__48148","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__48154","cljs.core/first","cljs.core/next","k","rxn","mranderson048.re-frame.v0v10v6.re-frame.interop/dispose!","cljs.core/not-empty","mranderson048.re_frame.v0v10v6.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic","mranderson048.re-frame.v0v10v6.re-frame.subs/clear-all-handlers!","mranderson048.re_frame.v0v10v6.re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1","mranderson048.re-frame.v0v10v6.re-frame.subs/cache-and-return","query-v","dynv","r","cache-key","mranderson048.re-frame.v0v10v6.re-frame.interop/add-on-dispose!","mranderson048.re-frame.v0v10v6.re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__48159","mranderson048.re-frame.v0v10v6.re-frame.trace/*current-trace*","*current-trace*-temp-val__48160","mranderson048.re-frame.v0v10v6.re-frame.trace/start-trace","end__48052__auto__","mranderson048.re-frame.v0v10v6.re-frame.interop/now","duration__48053__auto__","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","mranderson048.re-frame.v0v10v6.re-frame.trace/traces","cljs.core/conj","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","mranderson048.re-frame.v0v10v6.re-frame.trace/run-tracing-callbacks!","mranderson048.re-frame.v0v10v6.re-frame.utils/first-in-vector","mranderson048.re-frame.v0v10v6.re-frame.interop/reagent-id","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","query-cache","cljs.core/contains?","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v6.re-frame.interop/debug-enabled?","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","new-trace__48054__auto__","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/merge","var_args","G__48168","mranderson048.re-frame.v0v10v6.re-frame.subs/cache-lookup","mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2","dyn-v","G__48170","mranderson048.re-frame.v0v10v6.re-frame.subs/subscribe","query","*current-trace*-orig-val__48171","*current-trace*-temp-val__48172","temp__5733__auto__","cached","mranderson048.re_frame.v0v10v6.re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1","query-id","handler-fn","mranderson048.re_frame.v0v10v6.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v6.re-frame.db/app-db","*current-trace*-orig-val__48175","*current-trace*-temp-val__48176","not-reactive","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v6.re-frame.interop/ratom?","dyn-vals","mranderson048.re-frame.v0v10v6.re-frame.interop/make-reaction","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","sub","G__48182","G__48183","G__48184","G__48188","G__48189","G__48190","mranderson048.re-frame.v0v10v6.re-frame.subs/map-vals","f","m","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core/empty","cljs.core.map.cljs$core$IFn$_invoke$arity$1","p__48194","vec__48195","v","mranderson048.re-frame.v0v10v6.re-frame.subs/map-signals","signals","cljs.core/sequential?","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/map?","mranderson048.re-frame.v0v10v6.re-frame.interop/deref?","mranderson048.re-frame.v0v10v6.re-frame.subs/to-seq","x","cljs.core/List","mranderson048.re-frame.v0v10v6.re-frame.subs/deref-input-signals","dereffed-signals","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","mranderson048.re-frame.v0v10v6.re-frame.subs/reg-sub","seq48206","G__48207","self__4776__auto__","args","computation-fn","cljs.core/last","input-args","cljs.core/butlast","err-header","inputs-fn","G__48212","_","cljs.core/fn?","vec__48213","marker","vec","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","mranderson048.re_frame.v0v10v6.re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1","pairs","cljs.core.partition.cljs$core$IFn$_invoke$arity$2","markers","vecs","cljs.core/every?","cljs.core/vector?","mranderson048.re-frame.v0v10v6.re-frame.registrar/register-handler","db","query-vec","subscriptions","reaction-id","reaction","*current-trace*-orig-val__48220","*current-trace*-temp-val__48221","subscription","G__48225","G__48226","G__48227","G__48228","cljs.core/reset!","dyn-vec","*current-trace*-orig-val__48232","*current-trace*-temp-val__48233","G__48234","G__48235","G__48236","G__48237","G__48238","G__48239"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1580514166000,1580514166000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1E","goog/dom/tagname.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.dom.HtmlElement"]]],["^1E","goog/labs/useragent/platform.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.labs.userAgent.util","~$goog.string"]]],["^1E","goog/math/math.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.array","~$goog.asserts"]]],["^1E","goog/html/trustedtypes.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","goog/labs/useragent/browser.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^1[","~$goog.object","~$goog.string.internal"]]],["^1E","goog/html/safeurl.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^24"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/core.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^?","~$mranderson048.reagent.v0v8v0.reagent.impl.template","~$mranderson048.reagent.v0v8v0.reagent.impl.component","~$mranderson048.reagent.v0v8v0.reagent.impl.util","~$mranderson048.reagent.v0v8v0.reagent.impl.batching","~$mranderson048.reagent.v0v8v0.reagent.ratom","~$mranderson048.reagent.v0v8v0.reagent.debug","~$mranderson048.reagent.v0v8v0.reagent.interop","~$mranderson048.reagent.v0v8v0.reagent.dom"]]],["^1E","goog/array/array.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22"]]],["^1R","node_modules/prop-types/checkPropTypes.js"],[1580514166000,1580514166000,1549836454000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1E","mranderson048/re_frame/v0v10v6/re_frame/utils.cljc"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^U"]]],["^1E","goog/useragent/useragent.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1[","~$goog.reflect","^20"]]],["^1E","mranderson048/re_frame/v0v10v6/re_frame/loggers.cljc"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","~$clojure.set"]]],["^1E","mranderson048/re_frame/v0v10v6/re_frame/trace.cljc"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^N","^U","~$goog.functions"]]],["^1R","node_modules/fbjs/lib/emptyFunction.js"],[1580514166000,1580514166000,1528785402000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1E","goog/debug/error.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/dom.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^C","^2=","^2;","^2>","^2?","^2@","^2A"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/impl/component.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^A","^?","^2=","^2>","^2?","^2A","^2@"]]],["^1R","node_modules/fbjs/lib/emptyObject.js"],[1580514166000,1580514166000,1528785402000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1E","goog/dom/nodetype.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","mranderson048/re_frame/v0v10v6/re_frame/interop.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","~$goog.async.nextTick","~$mranderson048.reagent.v0v8v0.reagent.core","^2?"]]],["^1E","mranderson048/re_frame/v0v10v6/re_frame/db.cljc"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^N"]]],["^1R","node_modules/scheduler/cjs/scheduler.development.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1R","node_modules/scheduler/cjs/scheduler.production.min.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1E","goog/string/typedstring.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1R","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1R","node_modules/create-react-class/factory.js"],[1580514166000,1580514166000,1517346959000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^1R","node_modules/react/index.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1E","shadow/js.js"],[1580514166000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","goog/object/object.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^S","^N","^U","^M","^T","^R"]]],["^1E","goog/dom/asserts.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22"]]],["^1R","node_modules/react-dom/cjs/react-dom.production.min.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","^?","^2L","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1580514166000,1576261309000],["^1R","node_modules/react/cjs/react.development.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","^2L","~$module$node_modules$prop_types$checkPropTypes"]]],["^1E","goog/math/long.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22","^2G"]]],["^1E","goog/html/trustedresourceurl.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22","~$goog.html.trustedtypes","^27","^28","^29","^2:"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/impl/batching.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^2@","^2A","^2=","~$clojure.string"]]],["^1E","goog/string/internal.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1R","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1R","node_modules/fbjs/lib/warning.js"],[1580514166000,1580514166000,1528785401000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^1E","goog/functions/functions.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","goog/html/safestyle.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^22","~$goog.html.SafeUrl","^29","^2:","^24"]]],["^1E","goog/dom/safe.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22","~$goog.dom.asserts","^2I","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2X","^26","~$goog.html.uncheckedconversions","^29","^24"]]],["^1E","clojure/walk.cljs"],[1576261309000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O"]]],["^1E","goog/structs/map.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1E","goog/html/safehtml.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^22","~$goog.dom.TagName","~$goog.dom.tags","^2[","^30","~$goog.html.SafeStyleSheet","^2X","^26","^2U","^27","^28","^2D","^23","^29","^2:","^24"]]],["^1E","goog/dom/tags.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^23"]]],["^1E","goog/math/size.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1R","node_modules/scheduler/index.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1E","goog/labs/useragent/engine.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^1[","^20"]]],["^1E","goog/dom/dom.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^22","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^34","~$goog.dom.safe","^2Z","^31","~$goog.math.Coordinate","~$goog.math.Size","^23","^20","~$goog.string.Unicode","~$goog.userAgent"]]],["^1E","goog/asserts/asserts.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.debug.Error","^3:"]]],["^1E","goog/uri/uri.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^22","^20","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/ratom.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^2=","^2@","^2>","^2H"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/interop.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O"]]],["^1E","goog/i18n/bidi.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1R","node_modules/object-assign/index.js"],[1580514166000,1580514166000,1484580833000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1E","goog/fs/url.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","goog/base.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",[]]],["^1E","goog/structs/structs.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^23"]]],["^1E","clojure/string.cljs"],[1576261309000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^20","~$goog.string.StringBuffer"]]],["^1R","node_modules/create-react-class/index.js"],[1580514166000,1580514166000,1517346956000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","^?","~$module$node_modules$create_react_class$factory"]]],["^1R","node_modules/react/cjs/react.production.min.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","^2L"]]],["^1E","goog/debug/entrypointregistry.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22"]]],["^1E","goog/string/string.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^3;","^31","^29","^24"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/impl/template.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^?","^2V","~$clojure.walk","^2=","^2<","^2>","^2?","^2A","^2@"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/impl/util.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^2@","^2A","^2V"]]],["^1E","goog/reflect/reflect.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","goog/labs/useragent/util.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^24"]]],["^1E","goog/string/stringbuffer.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","goog/math/coordinate.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.math"]]],["^1E","goog/iter/iter.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^22","^2I","^3I"]]],["^1E","goog/async/nexttick.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","~$goog.debug.entryPointRegistry","~$goog.dom","^34","^3;","^2I","^2Z","^26","^2D","^2E","^29"]]],["^1E","goog/html/uncheckedconversions.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22","^2Z","^2[","^30","^36","^2X","^26","^29","^24"]]],["^1E","mranderson048/re_frame/v0v10v6/re_frame/registrar.cljc"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O","^N","^U"]]],["^1R","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1580514166000,1580514166000,1549571078000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]],["^1E","goog/dom/htmlelement.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P"]]],["^1E","cljs/core.cljs"],[1576261309000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["~$goog.math.Long","~$goog.math.Integer","^20","^23","^21","~$goog.Uri","^3F"]]],["^1E","goog/html/safescript.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22","^2U","^29","^2:"]]],["^1E","goog/html/safestylesheet.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^22","^30","^23","^29","^2:","^24"]]],["^1E","goog/math/integer.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^2G"]]],["^1E","goog/dom/browserfeature.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^3?"]]],["^1R","node_modules/scheduler/tracing.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1E","mranderson048/reagent/v0v8v0/reagent/debug.cljs"],[1553196208000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O"]]],["^1R","node_modules/react-dom/cjs/react-dom.development.js"],[1580514166000,1580514166000,499162500000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W","^?","^2L","^2R","^2T","~$module$node_modules$scheduler$tracing"]]],["^1E","clojure/set.cljs"],[1576261309000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^O"]]],["^1E","goog/uri/utils.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^21","^22","^20"]]],["^1E","goog/string/const.js"],[1573583361000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^P","^22","^2:"]]],["^1R","node_modules/fbjs/lib/invariant.js"],[1580514166000,1580514166000,1528785400000,"^1S",["^ ","^1T",null,"^1U",["^F",[]],"^1V",["^1W"]]]]],"~:clj-info",["^ ","jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/day8/re-frame/re-frame-10x/0.3.7-react16/re-frame-10x-0.3.7-react16.jar!/mranderson048/re_frame/v0v10v6/re_frame/trace.cljc",1553196208000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1551455708000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/day8/re-frame/re-frame-10x/0.3.7-react16/re-frame-10x-0.3.7-react16.jar!/mranderson048/reagent/v0v8v0/reagent/debug.clj",1553196208000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1551455708000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1563395860000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1563395860000,"jar:file:/Users/wvelezva/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1540637940000,"jar:file:/Users/wvelezva/.m2/repository/day8/re-frame/re-frame-10x/0.3.7-react16/re-frame-10x-0.3.7-react16.jar!/mranderson048/reagent/v0v8v0/reagent/interop.clj",1553196208000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1551455708000,"jar:file:/Users/wvelezva/.m2/repository/day8/re-frame/re-frame-10x/0.3.7-react16/re-frame-10x-0.3.7-react16.jar!/mranderson048/re_frame/v0v10v6/re_frame/interop.clj",1553196208000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/day8/re-frame/re-frame-10x/0.3.7-react16/re-frame-10x-0.3.7-react16.jar!/mranderson048/reagent/v0v8v0/reagent/ratom.clj",1553196208000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1551455708000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1501012539000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1563395860000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1563395860000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1551455708000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1568735301000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1563395860000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1563395860000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1576261309000,"jar:file:/Users/wvelezva/.m2/repository/day8/re-frame/re-frame-10x/0.3.7-react16/re-frame-10x-0.3.7-react16.jar!/mranderson048/reagent/v0v8v0/reagent/core.clj",1553196208000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1563395860000,"jar:file:/Users/wvelezva/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1576261309000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",1,"^8",5,"^9",1,"^:",49],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^R","^R","^R","^S","^S","^T","^T","^U","^U"],"^V",["^F",["^W"]],"~:shadow/js-access-global",["^F",["Error"]],"^X",["^ ","^Y","^N","^Z","^U","^[","^S","^10","^N","^11","^N","^12","^N","^13","^T","^14","^M","^15","^N","^16","^N","^17","^N","^18","^T","^19","^T"],"~:defs",["^ ","~$to-seq",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",181,"^8",7,"^9",181,"^:",13,"~:arglists",["^1<",["~$quote",["^1<",[["~$x"]]]]],"~:doc","Coerces x to a seq if it isn't one already"],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/to-seq","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",13,"~:method-params",["^1<",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1<",[null,null]],"^8",1,"~:variadic?",false,"^7",181,"~:ret-tag","~$clj","^9",181,"~:max-fixed-arity",1,"~:fn-var",true,"^4L",["^1<",["^4M",["^1<",[["~$x"]]]]],"^4N","Coerces x to a seq if it isn't one already"],"~$cache-and-return",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",42,"^8",7,"^9",42,"^:",23,"^4L",["^1<",["^4M",["^1<",[["~$query-v","~$dynv","~$r"]]]]],"^4N","cache the reaction r"],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/cache-and-return","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",23,"^4P",["^1<",[["^4Y","^4Z","~$r"]]],"^4Q",null,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"^7",42,"^9",42,"^4V",3,"^4W",true,"^4L",["^1<",["^4M",["^1<",[["^4Y","^4Z","~$r"]]]]],"^4N","cache the reaction r"],"~$deref-input-signals",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",188,"^8",8,"^9",188,"^:",27,"~:private",true,"^4L",["^1<",["^4M",["^1<",[["~$signals","~$query-id"]]]]]],"^51",true,"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/deref-input-signals","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",27,"^4P",["^1<",[["^52","^53"]]],"^4Q",null,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"^7",188,"^4T",["^F",["^4U","~$cljs.core/IList","~$any","~$cljs.core/LazySeq"]],"^9",188,"^4V",2,"^4W",true,"^4L",["^1<",["^4M",["^1<",[["^52","^53"]]]]]],"~$subscribe",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",74,"^8",7,"^9",74,"^:",16,"^4L",["^1<",["^4M",["^1<",[["~$query"],["^59","^4Z"]]]]],"^4N","Given a `query`, returns a Reagent `reaction` which, over\n  time, reactively delivers a stream of values. So in FRP-ish terms,\n  it returns a Signal.\n\n  To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n\n  `query` is a vector of at least one element. The first element is the\n  `query-id`, typically a namespaced keyword. The rest of the vector's\n  elements are optional, additional values which parameterise the query\n  performed.\n\n  `dynv` is an optional 3rd argument, `which is a vector of further input\n  signals (atoms, reactions, etc), NOT values. This argument exists for\n  historical reasons and is borderline deprecated these days.\n\n  Example Usage:\n  --------------\n\n    (subscribe [:items])\n    (subscribe [:items \"blue\" :small])\n    (subscribe [:items {:colour \"blue\"  :size :small}])\n\n  Note: for any given call to `subscribe` there must have been a previous call\n  to `reg-sub`, registering the query handler (function) for the `query-id` given.\n\n  Hint\n  ----\n\n  When used in a view function BE SURE to `deref` the returned value.\n  In fact, to avoid any mistakes, some prefer to define:\n\n     (def <sub  (comp deref mranderson048.re-frame.v0v10v6.re-frame.core/subscribe))\n\n  And then, within their views, they call  `(<sub [:items :small])` rather\n  than using `subscribe` directly.\n\n  De-duplication\n  --------------\n\n  XXX\n  ","~:top-fn",["^ ","^4S",false,"~:fixed-arity",2,"^4V",2,"^4P",["^1<",[["^59"],["^59","^4Z"]]],"^4L",["^1<",[["^59"],["^59","^4Z"]]],"^4R",["^1<",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/subscribe","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",16,"^5:",["^ ","^4S",false,"^5;",2,"^4V",2,"^4P",["^1<",[["^59"],["^59","^4Z"]]],"^4L",["^1<",[["^59"],["^59","^4Z"]]],"^4R",["^1<",[null,null]]],"^4P",["^1<",[["^59"],["^59","^4Z"]]],"^4Q",null,"^5;",2,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"~:methods",[["^ ","^5;",1,"^4S",false,"~:tag",["^F",[null,"^56"]]],["^ ","^5;",2,"^4S",false,"^5>",["^F",[null,"^56"]]]],"^7",74,"^9",74,"^4V",2,"^4W",true,"^4L",["^1<",[["^59"],["^59","^4Z"]]],"^4N","Given a `query`, returns a Reagent `reaction` which, over\n  time, reactively delivers a stream of values. So in FRP-ish terms,\n  it returns a Signal.\n\n  To obtain the returned Signal/Stream's current value, it must be `deref`ed.\n\n  `query` is a vector of at least one element. The first element is the\n  `query-id`, typically a namespaced keyword. The rest of the vector's\n  elements are optional, additional values which parameterise the query\n  performed.\n\n  `dynv` is an optional 3rd argument, `which is a vector of further input\n  signals (atoms, reactions, etc), NOT values. This argument exists for\n  historical reasons and is borderline deprecated these days.\n\n  Example Usage:\n  --------------\n\n    (subscribe [:items])\n    (subscribe [:items \"blue\" :small])\n    (subscribe [:items {:colour \"blue\"  :size :small}])\n\n  Note: for any given call to `subscribe` there must have been a previous call\n  to `reg-sub`, registering the query handler (function) for the `query-id` given.\n\n  Hint\n  ----\n\n  When used in a view function BE SURE to `deref` the returned value.\n  In fact, to avoid any mistakes, some prefer to define:\n\n     (def <sub  (comp deref mranderson048.re-frame.v0v10v6.re-frame.core/subscribe))\n\n  And then, within their views, they call  `(<sub [:items :small])` rather\n  than using `subscribe` directly.\n\n  De-duplication\n  --------------\n\n  XXX\n  "],"~$reg-sub",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",200,"^8",7,"^9",200,"^:",14,"^4L",["^1<",["^4M",["^1<",[["^53","~$&","~$args"]]]]],"^4N","For a given `query-id`, register a `computation` function and input `signals`.\n\n  At an abstract level, a call to this function allows you to register 'the mechanism'\n  to later fulfil a call to `(subscribe [query-id ...])`.\n\n  To say that another way, reg-sub allows you to create a template for a node\n  in the signal graph. But note: reg-sub does not cause a node to be created.\n  It simply allows you to register the template from which such a\n  node could be created, if it were needed, sometime later, when the call\n  to `subscribe` is made.\n\n  reg-sub needs three things:\n    - a `query-id`\n    - the required inputs for this node\n    - a computation function for this node\n\n  The `query-id` is always the 1st argument to reg-sub and it is typically\n  a namespaced keyword.\n\n  A computation function is always the last argument and it has this general form:\n    `(input-signals, query-vector) -> a-value`\n\n  What goes in between the 1st and last args can vary, but whatever is there will\n  define the input signals part of the template, and, as a result, it will control\n  what values the computation functions gets as a first argument.\n\n  There's 3 ways this function can be called - 3 ways to supply input signals:\n\n  1. No input signals given:\n\n     (reg-sub\n       :query-id\n       a-computation-fn)   ;; (fn [db v]  ... a-value)\n\n     The node's input signal defaults to `app-db`, and the value within `app-db` is\n     is given as the 1st argument to the computation function.\n\n  2. A signal function is supplied:\n\n     (reg-sub\n       :query-id\n       signal-fn     ;; <-- here\n       computation-fn)\n\n     When a node is created from the template, the `signal-fn` will be called and it\n     is expected to return the input signal(s) as either a singleton, if there is only\n     one, or a sequence if there are many, or a map with the signals as the values.\n\n     The values from the nominated signals will be supplied as the 1st argument to the\n     computation function - either a singleton, sequence or map of them, paralleling\n     the structure returned by the signal function.\n\n     Here, is an example signal-fn, which returns a vector of input signals.\n\n       (fn [query-vec dynamic-vec]\n         [(subscribe [:a-sub])\n          (subscribe [:b-sub])])\n\n     For that signal function, the computation function must be written\n     to expect a vector of values for its first argument.\n       (fn [[a b] _] ....)\n\n     If the signal function was simpler and returned a singleton, like this:\n        (fn [query-vec dynamic-vec]\n          (subscribe [:a-sub]))\n\n     then the computation function must be written to expect a single value\n     as the 1st argument:\n\n        (fn [a _] ...)\n\n  3. Syntax Sugar\n\n     (reg-sub\n       :a-b-sub\n       :<- [:a-sub]\n       :<- [:b-sub]\n       (fn [[a b] [_]] {:a a :b b}))\n\n  This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n  of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n  vector follows.\n\n  For further understanding, read `/docs`, and look at the detailed comments in\n  /examples/todomvc/src/subs.cljs\n  ","^5:",["^ ","^4S",true,"^5;",1,"^4V",1,"^4P",[["^1<",["^53","^5@"]]],"^4L",["^1<",[["^53","~$&","^5@"]]],"^4R",["^1<",[null]]]],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/reg-sub","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",14,"^5:",["^ ","^4S",true,"^5;",1,"^4V",1,"^4P",[["^1<",["^53","^5@"]]],"^4L",["^1<",[["^53","~$&","^5@"]]],"^4R",["^1<",[null]]],"^4P",[["^1<",["^53","^5@"]]],"^4Q",null,"^5;",1,"^4R",["^1<",[null]],"^8",1,"^4S",true,"^5=",[["^ ","^5;",1,"^4S",true,"^5>","^56"]],"^7",200,"^4T","^56","^9",200,"^4V",1,"^4W",true,"^4L",["^1<",[["^53","~$&","^5@"]]],"^4N","For a given `query-id`, register a `computation` function and input `signals`.\n\n  At an abstract level, a call to this function allows you to register 'the mechanism'\n  to later fulfil a call to `(subscribe [query-id ...])`.\n\n  To say that another way, reg-sub allows you to create a template for a node\n  in the signal graph. But note: reg-sub does not cause a node to be created.\n  It simply allows you to register the template from which such a\n  node could be created, if it were needed, sometime later, when the call\n  to `subscribe` is made.\n\n  reg-sub needs three things:\n    - a `query-id`\n    - the required inputs for this node\n    - a computation function for this node\n\n  The `query-id` is always the 1st argument to reg-sub and it is typically\n  a namespaced keyword.\n\n  A computation function is always the last argument and it has this general form:\n    `(input-signals, query-vector) -> a-value`\n\n  What goes in between the 1st and last args can vary, but whatever is there will\n  define the input signals part of the template, and, as a result, it will control\n  what values the computation functions gets as a first argument.\n\n  There's 3 ways this function can be called - 3 ways to supply input signals:\n\n  1. No input signals given:\n\n     (reg-sub\n       :query-id\n       a-computation-fn)   ;; (fn [db v]  ... a-value)\n\n     The node's input signal defaults to `app-db`, and the value within `app-db` is\n     is given as the 1st argument to the computation function.\n\n  2. A signal function is supplied:\n\n     (reg-sub\n       :query-id\n       signal-fn     ;; <-- here\n       computation-fn)\n\n     When a node is created from the template, the `signal-fn` will be called and it\n     is expected to return the input signal(s) as either a singleton, if there is only\n     one, or a sequence if there are many, or a map with the signals as the values.\n\n     The values from the nominated signals will be supplied as the 1st argument to the\n     computation function - either a singleton, sequence or map of them, paralleling\n     the structure returned by the signal function.\n\n     Here, is an example signal-fn, which returns a vector of input signals.\n\n       (fn [query-vec dynamic-vec]\n         [(subscribe [:a-sub])\n          (subscribe [:b-sub])])\n\n     For that signal function, the computation function must be written\n     to expect a vector of values for its first argument.\n       (fn [[a b] _] ....)\n\n     If the signal function was simpler and returned a singleton, like this:\n        (fn [query-vec dynamic-vec]\n          (subscribe [:a-sub]))\n\n     then the computation function must be written to expect a single value\n     as the 1st argument:\n\n        (fn [a _] ...)\n\n  3. Syntax Sugar\n\n     (reg-sub\n       :a-b-sub\n       :<- [:a-sub]\n       :<- [:b-sub]\n       (fn [[a b] [_]] {:a a :b b}))\n\n  This 3rd variation is syntactic sugar for the 2nd. Pairs are supplied instead\n  of an `input signals` functions. Each pair starts with a `:<-` and a subscription\n  vector follows.\n\n  For further understanding, read `/docs`, and look at the detailed comments in\n  /examples/todomvc/src/subs.cljs\n  "],"~$query->reaction",["^ ","^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/query->reaction","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",18,"^8",1,"^9",18,"^:",21,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",18,"^8",6,"^9",18,"^:",21],"^5>","~$cljs.core/Atom"],"~$clear-all-handlers!",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",36,"^8",7,"^9",36,"^:",26,"^4L",["^1<",["^4M",["^1<",[[]]]]],"^4N","Unregisters all existing subscription handlers"],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/clear-all-handlers!","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",26,"^4P",["^1<",[[]]],"^4Q",null,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"^7",36,"^4T",["^F",["^56","~$clj-nil"]],"^9",36,"^4V",0,"^4W",true,"^4L",["^1<",["^4M",["^1<",[[]]]]],"^4N","Unregisters all existing subscription handlers"],"~$cache-lookup",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",65,"^8",7,"^9",65,"^:",19,"^4L",["^1<",["^4M",["^1<",[["^4Y"],["^4Y","~$dyn-v"]]]]],"^5:",["^ ","^4S",false,"^5;",2,"^4V",2,"^4P",["^1<",[["^4Y"],["^4Y","^5I"]]],"^4L",["^1<",[["^4Y"],["^4Y","^5I"]]],"^4R",["^1<",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/cache-lookup","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",19,"^5:",["^ ","^4S",false,"^5;",2,"^4V",2,"^4P",["^1<",[["^4Y"],["^4Y","^5I"]]],"^4L",["^1<",[["^4Y"],["^4Y","^5I"]]],"^4R",["^1<",[null,null]]],"^4P",["^1<",[["^4Y"],["^4Y","^5I"]]],"^4Q",null,"^5;",2,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"^5=",[["^ ","^5;",1,"^4S",false,"^5>","^56"],["^ ","^5;",2,"^4S",false,"^5>",["^F",["^56","^5G"]]]],"^7",65,"^9",65,"^4V",2,"^4W",true,"^4L",["^1<",[["^4Y"],["^4Y","^5I"]]]],"~$map-vals",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",163,"^8",8,"^9",163,"^:",16,"^51",true,"^4L",["^1<",["^4M",["^1<",[["~$f","~$m"]]]]],"^4N","Returns a new version of 'm' in which 'f' has been applied to each value.\n  (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}"],"^51",true,"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/map-vals","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",16,"^4P",["^1<",[["~$f","~$m"]]],"^4Q",null,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"^7",163,"^4T",["^F",["^4U","^56"]],"^9",163,"^4V",2,"^4W",true,"^4L",["^1<",["^4M",["^1<",[["~$f","~$m"]]]]],"^4N","Returns a new version of 'm' in which 'f' has been applied to each value.\n  (map-vals inc {:a 4, :b 2}) => {:a 5, :b 3}"],"~$kind",["^ ","^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/kind","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",10,"^8",1,"^9",10,"^:",10,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",10,"^8",6,"^9",10,"^:",10],"^5>","~$cljs.core/Keyword"],"~$clear-subscription-cache!",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",20,"^8",7,"^9",20,"^:",32,"^4L",["^1<",["^4M",["^1<",[[]]]]],"^4N","Causes all subscriptions to be removed from the cache.\n  Does this by:\n     1. running on-dispose on all cached subscriptions\n     2. These on-dispose will then do the removal of themselves.\n\n  This is a development time tool. Useful when reloading Figwheel code\n  after a React exception, because React components won't have been\n  cleaned up properly. And this, in turn, means the subscriptions within those\n  components won't have been cleaned up correctly. So this forces the issue."],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/clear-subscription-cache!","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",32,"^4P",["^1<",[[]]],"^4Q",null,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"^7",20,"^4T",["^F",["^56","^5G"]],"^9",20,"^4V",0,"^4W",true,"^4L",["^1<",["^4M",["^1<",[[]]]]],"^4N","Causes all subscriptions to be removed from the cache.\n  Does this by:\n     1. running on-dispose on all cached subscriptions\n     2. These on-dispose will then do the removal of themselves.\n\n  This is a development time tool. Useful when reloading Figwheel code\n  after a React exception, because React components won't have been\n  cleaned up properly. And this, in turn, means the subscriptions within those\n  components won't have been cleaned up correctly. So this forces the issue."],"~$map-signals",["^ ","^4K",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^7",171,"^8",7,"^9",171,"^:",18,"^4L",["^1<",["^4M",["^1<",[["~$f","^52"]]]]],"^4N","Runs f over signals. Signals may take several\n  forms, this function handles all of them."],"^G","~$mranderson048.re-frame.v0v10v6.re-frame.subs/map-signals","^6","mranderson048/re_frame/v0v10v6/re_frame/subs.cljc","^:",18,"^4P",["^1<",[["~$f","^52"]]],"^4Q",null,"^4R",["^1<",[null,null]],"^8",1,"^4S",false,"^7",171,"^4T",["^F",["^4U","^55","^56","^57"]],"^9",171,"^4V",2,"^4W",true,"^4L",["^1<",["^4M",["^1<",[["~$f","^52"]]]]],"^4N","Runs f over signals. Signals may take several\n  forms, this function handles all of them."]],"^1:",["^ ","^R","^R","^Q","^R","^O","^O"],"~:cljs.analyzer/constants",["^ ","^V",["^F",["~:dyn-v","~:tags","~:sub/run","~:else","~:<-","~:sub","~:sub/create","~:warn","~:value","~:operation","~:start","~:duration","~:query-v","~:cached?","~:sub/dispose","~:error","~:input-signals","~:end","~:reaction","~:op-type"]],"~:order",["^5Z","^60","^62","^6<","^5V","^67","^65","^6;","^63","^64","^6:","^5[","^66","^68","^5U","^5X","^69","^5Y","^5W","^61"]],"^1A",["^ ","^W",["^F",[]]],"^1B",["^ "],"^1C",["^P","^O","^S","^N","^U","^M","^T","^R"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^1Q",[["^6@","~:static-fns"],true,["^6@","~:shadow-tweaks"],null,["^6@","~:elide-asserts"],false,["^6@","~:optimize-constants"],null,["^6@","^1H"],null,["^6@","~:external-config"],null,["^6@","~:tooling-config"],null,["^6@","~:emit-constants"],null,["^6@","~:load-tests"],null,["^6@","~:form-size-threshold"],null,["^6@","~:infer-externs"],true,["^6@","^1J"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6@","~:fn-invoke-direct"],null,["^6@","~:source-map"],"/dev/null"]]]